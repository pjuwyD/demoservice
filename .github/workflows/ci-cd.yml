name: CI/CD Pipeline for Service1 and Service2

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

jobs:
  test_build_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [service1, service2]

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install pytest
      run: pip install pytest

    - name: Run unit tests for Service1
      if: matrix.service == 'service1'
      run: |
        cd service1/tests
        pytest --maxfail=1 --disable-warnings -q

    - name: Run unit tests for Service2
      if: matrix.service == 'service2'
      run: |
        cd service2/tests
        pytest --maxfail=1 --disable-warnings -q

    - name: Run E2E tests
      run: |
        cd e2e_tests
        pytest --maxfail=1 --disable-warnings -q

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}

    - name: Build and push Docker image
      if: success()
      uses: docker/build-push-action@v3
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: |
              pjuwy/${{ matrix.service }}:latest
              ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v') && format('pjuwy/{0}:{1}', matrix.service, github.ref_name) || '' }}
